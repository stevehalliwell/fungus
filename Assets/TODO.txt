Move GetButtonColor out of the Command, it is ALWAYS static data
-move it to static data that is controlled by theme in the EditorSettings
--means people can customise them if they want, that we can ship themes etc.


Event on Block text entry list
-needs to have a text based search like command now does, prob needs more complicated drop down menu replacement


Commands and potential flowchart/ui changes to support HFSM in Fungus
-a command that overrides the getconnectedblocks and use that on an update event to run
-do we 'define an enum' in the codebase?
-we look up things like monster love does
-do we have a way of notifying a block that they are no longer being run?
--they have an on exit but that has no return or obvious means of delay
-http://fungusgames.com/forum#!/fungus-development:choosing-a-character-based/extending-conversation-seem
a state machine command has an int or enum that links to a block to tick, see call for wait and continue behaviour
-each 'state' has an enter, exit, tick
state machine can transition, force transition
*look into setting property on command such that it is not hidden in inspector



behaviour tree //http://aigamedev.com/open/article/behavior-trees-part1/
-behaviour
--timer, return success or fail or previous result for x ticks or real time
--condition, takes a bool if empty uses success
-sub tree
--if these are defined elsewhere how do they know the shared vars and targets etc.?
*do we need a context object that we pass to them?
*do the fungus commands actually just enable and disable the updates of these objects
revert changes to indent, make it indent arrays and lists instead
*currently menu prevents BT from functioning in its current state as the menu has no idea what it started, but this may not be a problem as if a bt gets to the point where it needs a menu, it has probably found an action worth persuing 
Appropriate block images for Behaviour tree types
numbering connections? could just need to pass the index to the draw index to the drawrectconnection and do a guilabel
move the failed succeeded, running, idle to a new enum so we can more acturately debug them



Optimisation pass
-need to get the tests working first so we can profile and automate test
-theres a bunch of string stuff
-there's a bunch of iTween stuff
-EDITOR- on scripts did load generate static list of all commands and events instead of as they are needed
-fungus messages, they could use the event distrib instead of the present method, that might be faster


Conversation should be able to do EVERYTHING that say and portrait can
-after that it should be able to do menu too


Global filter out commands
-stored in editor settings
-hide categories
-hide commands


Global command priority 
-default search sorting is alphabetical, that is not the most useful
-track command usage and sort by that?
-allow custom weight
-scan an existing project to determine weight?


Arrays
-want em, don't have em


flappy bird
-'modes'
--tap to flap
-scrolling layers
-pipe obstacle
--prob should have art...
--prob shouldnt move when hit
-bird
--anim rotation based on y velocity
--wing anim + gust particles
-physics or rb command


auto generate field and property get set fungus commmand
-test case is transform
-then make it do rbs
--cannot rely on static class as unity isn't doing that for Physics, but we can then test for static vs instance methods, see AID-Console
-we need to make the generator actually test it is using the correct types