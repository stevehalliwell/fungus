/*This script has been, partially or completely, generated by the Fungus.GenerateVariableWindow*/
using UnityEngine;


namespace Fungus
{
    /// <summary>
    /// AnimationCurve variable type.
    /// </summary>
    [VariableInfo("Other", "AnimationCurve")]
    [AddComponentMenu("")]
	[System.Serializable]
	public class AnimationCurveVariable : VariableBase<UnityEngine.AnimationCurve>
	{ }

	/// <summary>
	/// Container for a AnimationCurve variable reference or constant value.
	/// </summary>
	[System.Serializable]
	public struct AnimationCurveData
	{
		[SerializeField]
		[VariableProperty("<Value>", typeof(AnimationCurveVariable))]
		public AnimationCurveVariable animationCurveRef;

		[SerializeField]
		public UnityEngine.AnimationCurve animationCurveVal;

		public static implicit operator UnityEngine.AnimationCurve(AnimationCurveData AnimationCurveData)
		{
			return AnimationCurveData.Value;
		}

		public AnimationCurveData(UnityEngine.AnimationCurve v)
		{
			animationCurveVal = v;
			animationCurveRef = null;
		}

		public UnityEngine.AnimationCurve Value
		{
			get { return (animationCurveRef == null) ? animationCurveVal : animationCurveRef.Value; }
			set { if (animationCurveRef == null) { animationCurveVal = value; } else { animationCurveRef.Value = value; } }
		}

		public string GetDescription()
		{
			if (animationCurveRef == null)
			{
				return animationCurveVal.ToString();
			}
			else
			{
				return animationCurveRef.Key;
			}
		}
	}
}